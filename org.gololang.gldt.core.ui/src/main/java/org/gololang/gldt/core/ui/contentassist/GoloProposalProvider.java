/*
 * generated by Xtext
 */
package org.gololang.gldt.core.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import org.gololang.gldt.core.ui.contentassist.AbstractGoloProposalProvider;

/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class GoloProposalProvider extends AbstractGoloProposalProvider {

	@Override
	public void complete_MODULE(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		completeKeyword((Keyword) ruleCall.getRule().getAlternatives(), context, acceptor);
	}

	@Override
	public void complete_IMPORT(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		completeKeyword((Keyword) ruleCall.getRule().getAlternatives(), context, acceptor);
	}

	@Override
	public void complete_FUNCTION(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		completeKeyword((Keyword) ruleCall.getRule().getAlternatives(), context, acceptor);
	}

	@Override
	public void complete_LOCAL(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		completeKeyword((Keyword) ruleCall.getRule().getAlternatives(), context, acceptor);
	}

	@Override
	public void complete_IF(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		completeKeyword((Keyword) ruleCall.getRule().getAlternatives(), context, acceptor);
	}

	@Override
	public void complete_IN(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		completeKeyword((Keyword) ruleCall.getRule().getAlternatives(), context, acceptor);
	}

	@Override
	public void complete_MATCH(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		completeKeyword((Keyword) ruleCall.getRule().getAlternatives(), context, acceptor);
	}

	@Override
	public void complete_OTHERWISE(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		completeKeyword((Keyword) ruleCall.getRule().getAlternatives(), context, acceptor);
	}

	@Override
	public void complete_LET(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		completeKeyword((Keyword) ruleCall.getRule().getAlternatives(), context, acceptor);
	}

}
